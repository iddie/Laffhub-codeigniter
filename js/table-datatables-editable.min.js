var TableDatatablesEditable = function () {
    var e = function () {
        function e(e, t) {
            for (var n = e.fnGetData(t), a = $(">td", t), l = 0, r = a.length; r > l; l++) e.fnUpdate(n[l], t, l, !1);
            e.fnDraw()
        }

        function t(e, t) {
            var n = e.fnGetData(t),
                a = $(">td", t);
            a[1].innerHTML = '<input type="text" class="form-control input-small" value="' + n[1] + '">',
             a[2].innerHTML = '<input type="text" class="form-control input-small" value="' + n[2] + '">',
              a[3].innerHTML = '<input type="text" class="form-control input-small" value="' + n[3] + '">',
               a[4].innerHTML = '<input type="text" class="form-control input-small" value="' + n[4] + '">',
                a[6].innerHTML = '<a class="edit" href="">Save</a>', a[7].innerHTML = '<a class="cancel" href="">Cancel</a>'
        }
        function n(e, t) {
            var n = $("input", t);
            e.fnUpdate(n[0].value, t, 1, !1), e.fnUpdate(n[1].value, t, 2, !1), e.fnUpdate(n[2].value, t, 3, !1), e.fnUpdate(n[3].value, t, 4, !1),
             e.fnUpdate('<a class="edit" href="">Edit</a>', t, 6, !1), e.fnUpdate('<a class="delete" href="">Delete</a>', t, 7, !1), e.fnDraw()
        }
        var a = $("#sample_editable_1"),
            l = a.dataTable({
                lengthMenu: [
                    [10, 15, 20, -1],
                    [10, 15, 20, "All"]
                ],
                pageLength: 15,
                language: {
                    lengthMenu: " _MENU_ records"
                },
                columnDefs: [{
                    orderable: !0,
                    targets: [0]
                }, {
                    searchable: !0,
                    targets: [0]
                }],
                order: [
                    [0, "asc"]
                ],
                buttons: [{
                    extend: "print",
                    className: "btn dark btn-outline"
                }, {
                    extend: "copy",
                    className: "btn red btn-outline"
                }, {
                    extend: "pdf",
                    className: "btn green btn-outline"
                }, {
                    extend: "excel",
                    className: "btn yellow btn-outline "
                }, {
                    extend: "csv",
                    className: "btn purple btn-outline "
                }, {
                    extend: "colvis",
                    className: "btn dark btn-outline",
                    text: "Columns"
                }],
                dom: "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>"
            }),
            r = ($("#sample_editable_1_wrapper"), null),
            o = !1;
            var newEntry = false;
            function save(table,element,button){
                var inputs = $("input", element);
                var tds = $('td', element);
                var validInputsForBoolean = [1,0,"1","0"];
                
                var email = inputs[0].value;
                var f = inputs[1].value.trim();
                var g = inputs[2].value.trim();
                var h = inputs[3].value.trim();
                var id = tds[0].innerHTML;
                if(validInputsForBoolean.includes(f) && validInputsForBoolean.includes(g) && validInputsForBoolean.includes(h))
                {
                    var api_method = newEntry ? 'post' : 'put';
                    $.blockUI();
                    const params = new URLSearchParams();
                    params.append('_method',api_method);
                    params.append('api_token', meta_token);
                    params.append('email', email);
                    params.append('receive_subscription',f);
                    params.append('receive_revenue',g);
                    params.append('is_active',h);
                    params.append('id',id);
                    axios.post(_app_url+'api/save_report_recipients',params).then((response)=>{
                        $.unblockUI();
                        if(response.data.status=='success')
                        {
                            n(table, element);
                            r = null;
                            table.fnUpdate(response.data.data.id, element, 0, !1)
                            newEntry = false;
                            showNotify(response.data.message);
                        }
                        else{
                            showNotify(response.data.message,'error');
                        }
                    }).catch((error)=>{
                        $.unblockUI();
                    });
                    
                }
                else{
                    $.notify({
                        message: 'Invalid input(s) provided, please use 1 or 0' 
                    },{
                        type: 'danger'
                    });
                    
                    if(newEntry){
                        console.log('new entry, set 0 to !0');
                        newEntry ? o = !1 : o = !0;
                    }
                }
            }
            function deleteRow(instance)
            {
                var t = $(instance).parents("tr")[0];
                var rowData = $('td', t);
                var rodID = rowData[0].innerHTML;
                $.blockUI();
                var params = new URLSearchParams();
                params.append('id',rodID);
                params.append('api_token',meta_token);
                axios.post(_app_url+'api/delete_report_recipients',params).then((response)=>{
                    $.unblockUI();
                    if(response.data.status=='success')
                    {
                        l.fnDeleteRow(t);
                        showNotify(response.data.message);
                    }
                    else{
                        showNotify(response.data.message,'error');
                    }
                }).catch((error)=>{
                    $.unblockUI();
                });
               
            }
        $("#sample_editable_1_new").click(function (e) {
            if (e.preventDefault(), o && r) {
                if (!confirm("Previose row not saved. Do you want to save it ?")) return l.fnDeleteRow(r), r = null, void(o = !1);
                n(l, r), $(r).find("td:first").html("Untitled"), r = null, o = !1
            }
            var totalData = l.fnGetData();
            var tableRows = totalData.length;
            var lastRow = totalData[tableRows-1];
            var lastId = parseInt(lastRow[0])+1;
            newEntry = true;
            var date = moment().format("YYYY-MM-DD HH:mm:ss");
            var a = l.fnAddData([lastId,"","","", "", date,"",""]),
                i = l.fnGetNodes(a[0]);
            t(l, i), r = i, o = !0
        }), a.on("click", ".delete", function (e) {
            e.preventDefault()
            swal({
                title: "Are you sure?",
                text: "Once deleted, the recipient will be removed from the list",
                icon: "warning",
                buttons: true,
                dangerMode: true,
              })
              .then((willDelete) => {
                if (willDelete) {
                    deleteRow(this);
                } 
              });
              
            
        }), a.on("click", ".cancel", function (t) {
            newEntry ? o = !0 : o = !1;
            t.preventDefault(), o ? (l.fnDeleteRow(r), r = null, o = !1) : (e(l, r), r = null)
            newEntry = false;
        }), a.on("click", ".edit", function (a) {
            a.preventDefault(), o = !1;
            var i = $(this).parents("tr")[0];
            null !== r && r != i ? (e(l, r), t(l, i), r = i) : r == i && "Save" == this.innerHTML
             ? (save(l,r,a))
             : (t(l, i), r = i)
        })
        
    };
    return {
        init: function () {
            e()
        }
    }
}();
jQuery(document).ready(function () {
    TableDatatablesEditable.init()
});